{"version":3,"sources":["components/GroupedCVEList.jsx","components/ServiceCard.jsx","components/ScanResults.jsx","App.js","index.js"],"names":["iconMap","Critical","React","createElement","PiExclamationMarkFill","color","High Severity","IoIosWarning","Known Patterns","PiFileMagnifyingGlassFill","Vendor Advisories","IoDocumentTextSharp","Other","BsQuestionCircle","CVEGroup","_ref","category","entries","expanded","setExpanded","useState","categoryKey","replace","trim","style","marginBottom","onClick","toggle","cursor","fontWeight","background","padding","borderRadius","display","alignItems","gap","length","marginLeft","map","cve","i","cveId","match","arguments","undefined","toUpperCase","extractCVEId","id","vulnersUrl","encodeURIComponent","linkUrl","key","fontSize","lineHeight","title","marginTop","href","target","rel","textDecoration","borderBottom","transition","onMouseEnter","e","onMouseLeave","description","slice","cvss","exploit","Array","isArray","references","url","idx","normalizeId","GroupedCVEList","_ref2","groupedCves","dedupedGrouped","cveList","Object","seen","Set","uniqueEntries","baseId","has","add","push","_ref3","linkifyCVEs","text","ServiceCard","service","border","product","version","ports","Fragment","join","dangerouslySetInnerHTML","__html","grouped_cves","ScanResults","results","r","paddingBottom","ip","org","isp","domains","hostnames","some","h","includes","os","country","city","flagged_ports","tags","last_seen","services","sIdx","App","domain","setDomain","setResults","loading","setLoading","fontFamily","type","placeholder","value","onChange","marginRight","async","response","fetch","method","headers","Content-Type","body","JSON","stringify","data","json","err","console","error","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.78aee0eb.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { PiExclamationMarkFill } from \"react-icons/pi\";\r\nimport { IoIosWarning } from \"react-icons/io\";\r\nimport { BsQuestionCircle } from \"react-icons/bs\";\r\nimport { IoDocumentTextSharp } from \"react-icons/io5\";\r\nimport { PiFileMagnifyingGlassFill } from \"react-icons/pi\";\r\n\r\nconst iconMap = {\r\n  \"Critical\": <PiExclamationMarkFill color=\"#ad1f1f\" />,\r\n  \"High Severity\": <IoIosWarning color=\"#ed931c\" />,\r\n  \"Known Patterns\": <PiFileMagnifyingGlassFill color=\"#4a4b70\" />,\r\n  \"Vendor Advisories\": <IoDocumentTextSharp color=\"#595c59\" />,\r\n  \"Other\": <BsQuestionCircle color=\"gray\" />\r\n};\r\n\r\n// Utility to extract CVE-style ID from anything like UBUNTU-CVE-2024-XXXX\r\nfunction extractCVEId(id = '') {\r\n  const match = id.match(/CVE-\\d{4}-\\d{4,7}/i);\r\n  return match ? match[0].toUpperCase() : null;\r\n}\r\n\r\nfunction CVEGroup({ category, entries }) {\r\n  const [expanded, setExpanded] = useState(false);\r\n  const toggle = () => setExpanded(!expanded);\r\n  const categoryKey = category.replace(/^[^\\w]*/, '').trim();\r\n\r\n  return (\r\n    <div style={{ marginBottom: '1rem' }}>\r\n      <div\r\n        onClick={toggle}\r\n        style={{\r\n          cursor: 'pointer',\r\n          fontWeight: 'bold',\r\n          background: '#f3f3f3',\r\n          padding: '0.5rem',\r\n          borderRadius: '5px',\r\n          display: 'flex',\r\n          alignItems: 'center',\r\n          gap: '0.5rem'\r\n        }}\r\n      >\r\n        {iconMap[categoryKey]} {category} ({entries.length}) ▼\r\n      </div>\r\n      {expanded && (\r\n        <ul style={{ marginLeft: '1rem' }}>\r\n          {entries.map((cve, i) => {\r\n            const cveId = extractCVEId(cve.id);\r\n            const vulnersUrl = `https://vulners.com/search?query=${encodeURIComponent(cve.id)}`;\r\n            const linkUrl = cveId\r\n              ? `https://nvd.nist.gov/vuln/detail/${cveId}`\r\n              : vulnersUrl;\r\n\r\n            return (\r\n              <li key={i} style={{ marginBottom: '1rem', fontSize: '0.9rem', lineHeight: '1.4' }}>\r\n                <div><strong>ID:</strong> {cve.id}</div>\r\n\r\n                {cve.title && (\r\n                  <div style={{ marginTop: '0.25rem' }}>\r\n                    <strong>Title:</strong>{' '}\r\n                    <a\r\n                      href={linkUrl}\r\n                      target=\"_blank\"\r\n                      rel=\"noopener noreferrer\"\r\n                      style={{\r\n                        textDecoration: 'none',\r\n                        color: 'inherit',\r\n                        borderBottom: '1px dotted #888',\r\n                        transition: 'color 0.2s',\r\n                      }}\r\n                      onMouseEnter={(e) => (e.target.style.color = '#007acc')}\r\n                      onMouseLeave={(e) => (e.target.style.color = 'inherit')}\r\n                    >\r\n                      {cve.title}\r\n                    </a>\r\n                  </div>\r\n                )}\r\n\r\n                {cve.description && (\r\n                  <div style={{ marginTop: '0.5rem' }}>\r\n                    <strong>Description:</strong>{' '}\r\n                    {`${cve.description.slice(0, 300)}...`}\r\n                  </div>\r\n                )}\r\n\r\n                {cve.cvss && <div><strong>CVSS:</strong> {cve.cvss}</div>}\r\n                {typeof cve.exploit !== 'undefined' && (\r\n                  <div><strong>Exploit Available:</strong> {cve.exploit ? '✅ Yes' : '❌ No'}</div>\r\n                )}\r\n                {Array.isArray(cve.references) && cve.references.length > 0 && (\r\n                  <div><strong>References:</strong>\r\n                    <ul style={{ marginLeft: '1rem' }}>\r\n                      {cve.references.map((url, idx) => (\r\n                        <li key={idx}>\r\n                          <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">{url}</a>\r\n                        </li>\r\n                      ))}\r\n                    </ul>\r\n                  </div>\r\n                )}\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction normalizeId(id = '') {\r\n  return id.replace(/^[A-Z]+:/, '').toUpperCase(); // e.g. OSV:CVE-2024-1234 => CVE-2024-1234\r\n}\r\n\r\nfunction GroupedCVEList({ groupedCves }) {\r\n  const dedupedGrouped = {};\r\n\r\n  for (const [category, cveList] of Object.entries(groupedCves)) {\r\n    const seen = new Set();\r\n    const uniqueEntries = [];\r\n\r\n    for (const cve of cveList) {\r\n      const baseId = normalizeId(cve.id);\r\n      if (!seen.has(baseId)) {\r\n        seen.add(baseId);\r\n        uniqueEntries.push({ ...cve, id: baseId });\r\n      }\r\n    }\r\n\r\n    dedupedGrouped[category] = uniqueEntries;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {Object.entries(dedupedGrouped).map(([category, entries], idx) => (\r\n        <CVEGroup key={idx} category={category} entries={entries} />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GroupedCVEList;\r\n","// ServiceCard.jsx\r\nimport React from 'react';\r\nimport GroupedCVEList from './GroupedCVEList';\r\n\r\nconst linkifyCVEs = (text) => {\r\n  if (!text) return '';\r\n  return text.replace(/CVE-\\d{4}-\\d{4,7}/gi, (match) => {\r\n    return `<a href=\"https://cve.mitre.org/cgi-bin/cvename.cgi?name=${match}\" target=\"_blank\" rel=\"noopener noreferrer\">${match}</a>`;\r\n  });\r\n};\r\n\r\nfunction ServiceCard({ service }) {\r\n  return (\r\n    <div style={{ border: '1px solid #ddd', padding: '1rem', marginBottom: '1rem', borderRadius: '10px' }}>\r\n      <h3 style={{ marginBottom: '0.5rem' }}>\r\n        {service.product} {service.version}\r\n        {service.ports && service.ports.length > 0 && (\r\n          <> (Ports: {service.ports.join(', ')})</>\r\n        )}\r\n      </h3>\r\n\r\n      {service.description && (\r\n        <p\r\n          dangerouslySetInnerHTML={{\r\n            __html: linkifyCVEs(service.description),\r\n          }}\r\n        />\r\n      )}\r\n\r\n      {service.grouped_cves ? (\r\n        <GroupedCVEList groupedCves={service.grouped_cves} />\r\n      ) : (\r\n        <p style={{ color: '#888' }}>No known CVEs for this service.</p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ServiceCard;\r\n","import React from 'react';\r\nimport ServiceCard from './ServiceCard';\r\n\r\nfunction ScanResults({ results }) {\r\n  if (!results || results.length === 0) return <p>No results to display.</p>;\r\n  return (\r\n    <div style={{ marginTop: '2rem' }}>\r\n      {results.map((r, idx) => (\r\n        <div key={idx} style={{ borderBottom: '2px solid #ddd', paddingBottom: '1rem', marginBottom: '1rem' }}>\r\n          <h3>IP: {r.ip}</h3>\r\n          {/* <strong>Vulns test:</strong> {r.vulns?.join(', ') || 'None'} */}\r\n          <p><strong>Organization:</strong> {r.org}</p>\r\n          {r.isp && r.isp !== r.org && (\r\n            <p><strong>ISP:</strong> {r.isp}</p>\r\n          )}\r\n          {r.domains && r.domains.length > 0 && (\r\n            <p><strong>Domains:</strong> {r.domains.join(', ')}</p>\r\n          )}\r\n\r\n          {r.hostnames && r.hostnames.length > 0 && r.hostnames.some(h => !r.domains.includes(h)) && (\r\n            <p><strong>Hostnames:</strong> {r.hostnames.join(', ')}</p>\r\n          )}\r\n          <p><strong>OS:</strong> {r.os}</p>\r\n          <p><strong>Country:</strong> {r.country}</p>\r\n          <p><strong>City:</strong> {r.city}</p>\r\n          <p><strong>Ports:</strong> {(Array.isArray(r.ports) && r.ports.length > 0) ? r.ports.join(', ') : 'None'}</p>\r\n          <p><strong>Flagged Ports:</strong> {(Array.isArray(r.flagged_ports) && r.flagged_ports.length > 0) ? r.flagged_ports.join(', ') : 'None'}</p>\r\n          <p><strong>Tags:</strong> {(Array.isArray(r.tags) && r.tags.length > 0) ? r.tags.join(', ') : 'None'}</p>\r\n          <p><strong>Last seen:</strong> {r.last_seen}</p>\r\n          {/* <p><strong>AI CVE Summary:</strong> {r.cve_summary || 'None'}</p> */}\r\n          {r.services.map((service, sIdx) => (\r\n            <ServiceCard key={sIdx} service={service} />\r\n          ))}\r\n        </div>\r\n      ))}\r\n    </div>\r\n    \r\n  );\r\n\r\n}\r\n\r\nexport default ScanResults;\r\n","import React, { useState } from 'react';\nimport ScanResults from './components/ScanResults';\n\nfunction App() {\n  const [domain, setDomain] = useState('');\n  const [results, setResults] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  const handleScan = async () => {\n    setLoading(true);\n    setResults(null);\n    try {\n      const response = await fetch('http://localhost:8000/scan', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ domain }),\n      });\n\n      const data = await response.json();\n      setResults(data.results); // Only store the inner results array\n    } catch (err) {\n      console.error('Scan failed:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div style={{ padding: '2rem', fontFamily: 'sans-serif' }}>\n      <h1>Smart Recon Tool</h1>\n      <input\n        type=\"text\"\n        placeholder=\"Enter domain (e.g. example.com)\"\n        value={domain}\n        onChange={(e) => setDomain(e.target.value)}\n        style={{ padding: '0.5rem', marginRight: '1rem' }}\n      />\n      <button onClick={handleScan}>Scan</button>\n\n      {loading && <p>Scanning...</p>}\n\n      <ScanResults results={results} />\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App'; // ✅ This matches App.js above\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);"],"sourceRoot":""}